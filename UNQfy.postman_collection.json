{
	"info": {
		"_postman_id": "00d29bdb-cd30-4618-a104-176e5e57ee7f",
		"name": "UNQfy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "errors",
			"item": [
				{
					"name": "route not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4645292-6339-4c32-a193-9fc7a5c519c0",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"route not found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/invalidRoute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"invalidRoute"
							]
						}
					},
					"response": []
				},
				{
					"name": "send invalid json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "929e065d-fada-4fa0-be1f-5bba178b540f",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"invalid json\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 400,",
									"        errorCode: \"BAD_REQUEST\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Guns n' Roses\",\n  country\": \"USA\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "artists/9999 (doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f65e22ec-7226-4422-9f01-dfa8c23ef3cc",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"get inexistent artist\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/9999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "add album (artist doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6142bb2b-ae5b-4c30-abd3-1f0272758e17",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album to inexistent artist\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RELATED_RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Appetite For Destruction\",\n  \"year\": 1987,\n  \"artistId\": 9999\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "add artist (missing required field)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53a64458-fbe1-413e-9adc-63d29f8c3192",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add artist, missing required field\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 400,",
									"        errorCode: \"BAD_REQUEST\"",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"country\": \"USA\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "albums/9999 (doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6d1fdb6-7f81-454b-970a-46a5b3b9891b",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"get inexistent album\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/99999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "add album (missing required field)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba0cc72e-0d60-4890-8b0a-1c6c7db3c0ef",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album, missing required field\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 400,",
									"        errorCode: \"BAD_REQUEST\"",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Appetite For Destruction\",\n  \"year\": 1987\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete artist (doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f853c61a-f170-4d01-8a61-a02651b70f62",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"delete inexistent artist\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/9999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete album (doesn't exist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24dd8026-3957-49f2-bfe4-20d46bf284a9",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"delete inexistent album\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 404,",
									"        errorCode: \"RESOURCE_NOT_FOUND\"",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/9999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"9999"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "artists",
			"item": [
				{
					"name": "filter artists",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4bc5ea0c-3303-4a5b-9941-15fc25337a93",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6e51336f-176c-47d1-8960-293aa8c129bf",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be empty list\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([]);",
									"",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists?name=guns",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							],
							"query": [
								{
									"key": "name",
									"value": "guns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "all artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d36c3af5-e3ab-489d-9f49-7e0f0ce9cb8f",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be empty list\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([]);",
									"",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "add artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "864d8de6-18f0-4785-a604-0e67ff1bc45b",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should add artist\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.id;",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": artistId,",
									"        \"name\": \"Guns and Roses\",",
									"        \"albums\": [],",
									"        \"country\": \"United States\",",
									"    });",
									"    pm.environment.set(\"testArtistId\", artistId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4796f434-27e6-40cb-9782-3ef019c800a5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Guns and Roses\",\n  \"country\": \"United States\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "add duplicated artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f04ac798-547d-4a27-ba5e-338ced4df4cd",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add artist with the same name\", function () {",
									"    pm.response.to.have.status(409);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 409,",
									"        errorCode: \"RESOURCE_ALREADY_EXISTS\"        ",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d6474798-ea2e-4385-8bfe-ac51b3c21dfc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Guns and Roses\",\n  \"country\": \"United States\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b00f3174-d96c-4093-a8ae-f0900c328f71",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get artist\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testArtistId\"),",
									"        \"name\": \"Guns and Roses\",",
									"        \"albums\": [],",
									"        \"country\": \"United States\",",
									"    });",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93d17a78-1e1c-43c0-8e5b-dbad1d367e79",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should add artist\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.id;",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": artistId,",
									"        \"name\": \"Guns n' Roses\",",
									"        \"albums\": [],",
									"        \"country\": \"USA\",",
									"    });",
									"    pm.environment.set(\"testArtistId\", artistId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "09b535d5-0705-4109-8543-d3efa2c0b226",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Guns n' Roses\",\n  \"country\": \"USA\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add another artist ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ab66956-310f-47ac-b9a1-1fc0a6a0a4da",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should add another artist\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.id;",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": artistId,",
									"        \"name\": \"Muse\",",
									"        \"albums\": [],",
									"        \"country\": \"UK\",",
									"    });",
									"    pm.environment.set(\"testArtistId2\", artistId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a2916a09-fc3c-4151-a993-c84e43ee49d2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Muse\",\n  \"country\": \"UK\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "filter artists guns",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9368ccc2-079a-446f-a60e-c606de2c813e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "541f49df-129d-4224-8331-919b8a8f8b58",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get list of one artist\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId\"),",
									"            \"name\": \"Guns n' Roses\",",
									"            \"albums\": [],",
									"            \"country\": \"USA\",",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists?name=guns",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							],
							"query": [
								{
									"key": "name",
									"value": "guns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "filter artists se",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c4e38f5a-8381-4d14-9cb5-59018d207b99",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "80a34f9f-e809-43a1-bf93-4c910179cfcd",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get two artists\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId\"),",
									"            \"name\": \"Guns n' Roses\",",
									"            \"albums\": [],",
									"            \"country\": \"USA\",",
									"        },",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId2\"),",
									"            \"name\": \"Muse\",",
									"            \"albums\": [],",
									"            \"country\": \"UK\",",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists?name=se",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							],
							"query": [
								{
									"key": "name",
									"value": "se"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "all artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58acea3e-11de-4922-b1d0-5d88a700d401",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get two artists\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId\"),",
									"            \"name\": \"Guns n' Roses\",",
									"            \"albums\": [],",
									"            \"country\": \"USA\",",
									"        },",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId2\"),",
									"            \"name\": \"Muse\",",
									"            \"albums\": [],",
									"            \"country\": \"UK\",",
									"        }",
									"    ]);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete artist Muse",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3dbee60-9306-494d-bf4c-949e130c28f8",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should delete artist\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "all artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74b4a177-4d95-4f80-8313-5176c2379196",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should get one artist\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testArtistId\"),",
									"            \"name\": \"Guns n' Roses\",",
									"            \"albums\": [],",
									"            \"country\": \"USA\",",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "albums",
			"item": [
				{
					"name": "all albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c020695f-992c-4a31-9951-8832cb1fb731",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"empty albums\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "filter albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e843a011-b50d-403e-8404-416ad9e923dc",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"empty albums\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums?name=destruction",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							],
							"query": [
								{
									"key": "name",
									"value": "destruction"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add album",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a312870-5338-4db8-a5c1-73b6b7d71a55",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var albumId = jsonData.id;",
									"    ",
									"    var expectedAlbum = {",
									"        \"id\": albumId,",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"year\": 2000,",
									"        \"tracks\":[]",
									"    };",
									"    ",
									"    pm.expect(jsonData).to.be.deep.equal(expectedAlbum);",
									"    pm.environment.set(\"testAlbumId\", albumId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1e79b5c1-f5d0-4dac-b591-123b3bfa9828",
								"exec": [
									"/*",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"   ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.artistId;",
									"    ",
									"    pm.response.to.have.jsonBody({",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"year\": 1987,",
									"        \"artistId\": artistId",
									"    });",
									"});",
									"",
									"const echoPostRequest = {",
									"  url: `http://localhost:${port}`,",
									"  method: 'DELETE',",
									"  header: '',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({ key: 'this is json' })",
									"  }",
									"};",
									"pm.sendRequest(, function (err, response) {",
									"    console.log(response.json());",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Appetite For Destruction\",\n  \"year\": 2000,\n  \"artistId\": {{testArtistId}}\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "add duplicated album",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4021ed4d-e479-45b5-8830-fe2b1b521050",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album with the same name\", function () {",
									"    pm.response.to.have.status(409);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        status: 409,",
									"        errorCode: \"RESOURCE_ALREADY_EXISTS\"        ",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5df345b3-b8d8-41dd-bb8b-18b8f68b85ee",
								"exec": [
									"/*",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"   ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.artistId;",
									"    ",
									"    pm.response.to.have.jsonBody({",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"year\": 1987,",
									"        \"artistId\": artistId",
									"    });",
									"});",
									"",
									"const echoPostRequest = {",
									"  url: `http://localhost:${port}`,",
									"  method: 'DELETE',",
									"  header: '',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({ key: 'this is json' })",
									"  }",
									"};",
									"pm.sendRequest(, function (err, response) {",
									"    console.log(response.json());",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Appetite For Destruction\",\n  \"year\": 2000,\n  \"artistId\": {{testArtistId}}\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "get album",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d225327-0320-42a3-b63a-776e09056a97",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"get album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testAlbumId\"),",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"tracks\": [],",
									"        \"year\": 2000,",
									"    });",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/{{testAlbumId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"{{testAlbumId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update album (partial)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e63bb8a-36fa-4312-8813-4de123341930",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"update album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testAlbumId\"),",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"tracks\": [],",
									"        \"year\": 1987,",
									"    });",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"year\": 1987\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/{{testAlbumId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"{{testAlbumId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a1365e2-9a19-46c7-9342-408093c5b7b7",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"artist should have 1 album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testArtistId\"),",
									"        \"name\": \"Guns n' Roses\",",
									"        \"albums\": [",
									"             {",
									"                \"id\": pm.environment.get(\"testAlbumId\"),",
									"                \"name\": \"Appetite For Destruction\",",
									"                \"year\": 1987,",
									"                \"tracks\":[]",
									"            }",
									"        ],",
									"        \"country\": \"USA\",",
									"    });",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add another album",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5784704e-1c70-45ab-8baa-bde2d3cf98be",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"add album\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    var albumId = jsonData.id;",
									"    ",
									"    var expectedAlbum = {",
									"        \"id\": albumId,",
									"        \"name\": \"Use Your Illusion 1\",",
									"        \"year\": 1992,",
									"        \"tracks\":[]",
									"    };",
									"    ",
									"    pm.expect(jsonData).to.be.deep.equal(expectedAlbum);",
									"    pm.environment.set(\"testAlbumId2\", albumId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d4ac5926-5565-45b7-8358-1d9112df87d8",
								"exec": [
									"/*",
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"   ",
									"    var jsonData = pm.response.json();",
									"    var artistId = jsonData.artistId;",
									"    ",
									"    pm.response.to.have.jsonBody({",
									"        \"name\": \"Appetite For Destruction\",",
									"        \"year\": 1987,",
									"        \"artistId\": artistId",
									"    });",
									"});",
									"",
									"const echoPostRequest = {",
									"  url: `http://localhost:${port}`,",
									"  method: 'DELETE',",
									"  header: '',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({ key: 'this is json' })",
									"  }",
									"};",
									"pm.sendRequest(, function (err, response) {",
									"    console.log(response.json());",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Use Your Illusion 1\",\n  \"year\": 1992,\n  \"artistId\": {{testArtistId}}\n}"
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "filter albums illusion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a14185b-f1c3-4078-ad6f-89db4a7e8169",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be one album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"        \"id\": pm.environment.get(\"testAlbumId2\"),",
									"        \"name\": \"Use Your Illusion 1\",",
									"        \"year\": 1992,",
									"        \"tracks\": [],",
									"    }]);",
									"    ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums?name=illusion",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							],
							"query": [
								{
									"key": "name",
									"value": "illusion"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "all albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d789886-25ba-436d-837c-5d24a267c922",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be two album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"       {",
									"            \"id\": pm.environment.get(\"testAlbumId\"),",
									"            \"name\": \"Appetite For Destruction\",",
									"            \"year\": 1987,",
									"            \"tracks\":[]",
									"        },",
									"        {",
									"            \"id\": pm.environment.get(\"testAlbumId2\"),",
									"            \"name\": \"Use Your Illusion 1\",",
									"            \"year\": 1992,",
									"            \"tracks\": [],",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3cde1f8-d029-47b7-97ac-81169b3d7a9f",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"artist should have 2 albums\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testArtistId\"),",
									"        \"name\": \"Guns n' Roses\",",
									"        \"albums\": [",
									"             {",
									"                \"id\": pm.environment.get(\"testAlbumId\"),",
									"                \"name\": \"Appetite For Destruction\",",
									"                \"year\": 1987,",
									"                \"tracks\":[]",
									"            },",
									"            {",
									"                \"id\": pm.environment.get(\"testAlbumId2\"),",
									"                \"name\": \"Use Your Illusion 1\",",
									"                \"year\": 1992,",
									"                \"tracks\": [],",
									"            }",
									"        ],",
									"        \"country\": \"USA\",",
									"    });",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete album",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0e8b087-01e0-4a44-abb1-91a4f19466da",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"delete album\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/albums/{{testAlbumId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums",
								"{{testAlbumId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05261eac-1b88-4c4f-92bc-82499805dc09",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"artist should have one album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    ",
									"",
									"    pm.expect(jsonData).to.be.deep.equal({",
									"        \"id\": pm.environment.get(\"testArtistId\"),",
									"        \"name\": \"Guns n' Roses\",",
									"        \"albums\": [",
									"            {",
									"                \"id\": pm.environment.get(\"testAlbumId2\"),",
									"                \"name\": \"Use Your Illusion 1\",",
									"                \"year\": 1992,",
									"                \"tracks\": [],",
									"            }",
									"        ],",
									"        \"country\": \"USA\",",
									"    });",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/artists/{{testArtistId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"artists",
								"{{testArtistId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "all albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c885c7b-bc0c-4d71-a992-4810cc0c88ba",
								"type": "text/javascript",
								"exec": [
									"const chai = require('chai');",
									"chai.config.truncateThreshold = 0;",
									"",
									"pm.test(\"should be one album\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.have.jsonBody();",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.deep.equal([",
									"        {",
									"            \"id\": pm.environment.get(\"testAlbumId2\"),",
									"            \"name\": \"Use Your Illusion 1\",",
									"            \"year\": 1992,",
									"            \"tracks\": [],",
									"        }",
									"    ]);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/albums",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"albums"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tracks",
			"item": [
				{
					"name": "addTrack",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b8c17ca-4946-4f73-a01f-07ad5434881d",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var trackId = jsonData.id;\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"      \"name\": \"Unleashed\",\r",
									"      \"lyrics\": \"\",\r",
									"    });\r",
									"    pm.environment.set(\"testTrackId\", trackId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Unleashed\",\r\n    \"genres\": [\"Rock\"],\r\n    \"duration\": 777\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/tracks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"tracks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "addTrack1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a05fb978-58e7-4d65-b3cc-6ae1e9559771",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var trackId = jsonData.id;\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"      \"name\": \"Victory\",\r",
									"      \"lyrics\": \"\",\r",
									"    });\r",
									"    pm.environment.set(\"testTrackId\", trackId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Victory\",\r\n    \"genres\": [\"Rock\"],\r\n    \"duration\": 666\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/tracks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"tracks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "addTrack2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8dc5ed33-38cf-424c-93a0-9a8aaf49de0f",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var trackId = jsonData.id;\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"      \"name\": \"Welcome to the jungle\",\r",
									"      \"lyrics\": \"\",\r",
									"    });\r",
									"    pm.environment.set(\"testTrackId\", trackId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Welcome to the jungle\",\r\n    \"genres\": [\"Rock\"],\r\n    \"duration\": 555\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/tracks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"tracks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "addTrack (Missing require field)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73a86e26-a39b-4ce5-b393-39169e33644d",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"add track, missing required field\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 400,\r",
									"        errorCode: \"BAD_REQUEST\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"PainKiller\",\r\n    \"genres\": [\"Rock\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/tracks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"tracks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "addTrack (Inexistent album)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab2c7d74-f1ff-463b-af6a-62a6a03d37c0",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"add track, missing required field\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RELATED_RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"PainKiller\",\r\n    \"genres\": [\"Rock\"],\r\n    \"duration\": 444\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/tracks/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"tracks",
								"5"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "lyrics",
			"item": [
				{
					"name": "lyrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1df4ddf-6814-4968-89cb-a03fbc6ef3bb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/tracks/0/lyrics",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"tracks",
								"0",
								"lyrics"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "users",
			"item": [
				{
					"name": "addUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12644e30-06a7-486b-aa61-ab6225afe0a8",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add user\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var userId = jsonData.id;\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"id\": userId,\r",
									"        \"name\": \"Spore\",\r",
									"        \"songsHeard\": [],\r",
									"    });\r",
									"    pm.environment.set(\"testUserId\", userId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"name\" : \"Spore\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user"
							]
						},
						"description": "Agrega un usuario."
					},
					"response": []
				},
				{
					"name": "addOtherUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39ffd9be-0c49-4e2c-9cd5-278adcff5b15",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add other user\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var userId = jsonData.id;\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"id\": userId,\r",
									"        \"name\": \"Ign4n\",\r",
									"        \"songsHeard\": [],\r",
									"    });\r",
									"    pm.environment.set(\"testOtherUserId\", userId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Ign4n\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user"
							]
						},
						"description": "Agrega un usuario."
					},
					"response": []
				},
				{
					"name": "add duplicated user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca210cee-293a-4381-a547-e1259334a9e0",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"add user with the same name\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 409,\r",
									"        errorCode: \"RESOURCE_ALREADY_EXISTS\"        \r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Spore\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user"
							]
						},
						"description": "Intenta agregar un usuario."
					},
					"response": []
				},
				{
					"name": "addUser (Missing required field)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a8c61fb-54a5-4882-9e96-79f2c0d11731",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"add user, missing required field\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 400,\r",
									"        errorCode: \"BAD_REQUEST\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user"
							]
						},
						"description": "Agrega un usuario sin el atributo \"name\" en el body."
					},
					"response": []
				},
				{
					"name": "updateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03a50b9e-e30c-4bf7-8b36-cf53935354af",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should update user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var userId = jsonData.id;\r",
									"    \r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"id\": userId,\r",
									"        \"name\": \"Facebook\",\r",
									"        \"songsHeard\": [],\r",
									"    });\r",
									"    pm.environment.set(\"testUserUpdateId\", userId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Facebook\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"1"
							]
						},
						"description": "Actualiza un usuario."
					},
					"response": []
				},
				{
					"name": "uptadteUser (Inexistent user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ef14b85-4079-4f35-831f-caa6e84aa717",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"update inexistent user\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Facebook\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"5"
							]
						},
						"description": "Intenta actualizar un usuario inexistente."
					},
					"response": []
				},
				{
					"name": "update duplicated user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3fa9e5f-2768-4420-9b78-3f294448e9ae",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"update duplicated user\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 409,\r",
									"        errorCode: \"RESOURCE_ALREADY_EXISTS\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Spore\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"1"
							]
						},
						"description": "Intenta actualizar un usuario con un nombre que ya existe."
					},
					"response": []
				},
				{
					"name": "updateUser (Missing required field)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8dc9e676-b459-465b-80d2-27fa3b3bd656",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"update user, missing required field\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 400,\r",
									"        errorCode: \"BAD_REQUEST\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"1"
							]
						},
						"description": "Intenta actualizar un usuario sin el atributo \"name\" en el body."
					},
					"response": []
				},
				{
					"name": "deleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4442269b-7713-4e7c-be3b-fe45f367c4ad",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should delete user\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"1"
							]
						},
						"description": "Borra un usuario."
					},
					"response": []
				},
				{
					"name": "getUserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10f7e264-65df-4570-bda9-d7f53212fa3c",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should get a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"id\": 0,\r",
									"        \"name\": \"Spore\",\r",
									"        \"songsHeard\": [],\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0"
							]
						},
						"description": "Obtiene a un usuario."
					},
					"response": []
				},
				{
					"name": "getUserById (Inexistent user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "929bc640-ba22-4679-aedd-a46562321724",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"update inexistent user\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/24",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"24"
							]
						},
						"description": "Intenta obtener a un usuario inexistente."
					},
					"response": []
				},
				{
					"name": "hear",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b204e54-81fb-473f-a817-731c94f83e3b",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track in songsheard list of a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"1"
							]
						},
						"description": "Agrega la informacion necesaria de un track a la lista de tracks escuchados del usuario."
					},
					"response": []
				},
				{
					"name": "hear track 0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4550d9bb-20e9-4be2-9648-d23bc93bffe8",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track in songsheard list of a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"0"
							]
						},
						"description": "Agrega la informacion necesaria de un track a la lista de tracks escuchados del usuario."
					},
					"response": []
				},
				{
					"name": "hear track 0 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78b81c52-6eff-4239-afdb-ae79ac563619",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track in songsheard list of a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"0"
							]
						},
						"description": "Agrega la informacion necesaria de un track a la lista de tracks escuchados del usuario."
					},
					"response": []
				},
				{
					"name": "hear track 0 Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6731f770-b9ef-452c-8d92-5fdd6efbc15e",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track in songsheard list of a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"0"
							]
						},
						"description": "Agrega la informacion necesaria de un track a la lista de tracks escuchados del usuario."
					},
					"response": []
				},
				{
					"name": "hear track 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0bada4bd-cde7-4adc-8d86-a48b81fc50d7",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track in songsheard list of a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"2"
							]
						},
						"description": "Agrega la informacion necesaria de un track a la lista de tracks escuchados del usuario."
					},
					"response": []
				},
				{
					"name": "hear track 2 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2a80e28-27ed-48e0-aca4-65bbe713b2ef",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track in songsheard list of a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"2"
							]
						},
						"description": "Agrega la informacion necesaria de un track a la lista de tracks escuchados del usuario."
					},
					"response": []
				},
				{
					"name": "hear track 2 Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a59ad635-9418-4433-953b-7eeb982bedfc",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track in songsheard list of a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"2"
							]
						},
						"description": "Agrega la informacion necesaria de un track a la lista de tracks escuchados del usuario."
					},
					"response": []
				},
				{
					"name": "hear track 2 Copy Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89ef4f00-d66d-49b8-9077-343647477a9f",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"should add track in songsheard list of a user\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"2"
							]
						},
						"description": "Agrega la informacion necesaria de un track a la lista de tracks escuchados del usuario."
					},
					"response": []
				},
				{
					"name": "getTimeHeard",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f92de9a9-13e9-4f76-84ff-2b91516cc8c4",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"deberia devolver la cantidad de veces que un usuario escucho un track\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"timesHeard\": 3\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"0"
							]
						},
						"description": "Obtiene la cantidad de veces que un usuario escucho un track."
					},
					"response": []
				},
				{
					"name": "getTimeHeard (Inexistent user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb748ea2-203d-4d9b-a438-e08909bc1178",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"deberia devolver la cantidad de veces que un usuario inexistente escucho un track\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/1/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"1",
								"0"
							]
						},
						"description": "Intenta obtener la cantidad de veces que un usuario inexistente escucho un track."
					},
					"response": []
				},
				{
					"name": "getTimeHeard (Inexistent track)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "097ec0f9-3744-4540-8274-9289c1068f64",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"deberia devolver la cantidad de veces que un usuario escucho un track inexistente\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/50",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"50"
							]
						},
						"description": "Intenta obtener la cantidad de veces que un usuario escucho un track inexistente."
					},
					"response": []
				},
				{
					"name": "getMostHeard",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee425ae9-462b-46f9-bc87-b62cc9eb48fe",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"deberia obtener los tres tracks mas escuchados de un artista por un usuario.\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        \"mostHeardTracks\": [{trackName: \"Welcome to the jungle\", artistName: \"Guns n' Roses\", timesHeard: 4},\r",
									"                            {trackName: \"Unleashed\", artistName: \"Guns n' Roses\", timesHeard: 3},\r",
									"                            {trackName: \"Victory\", artistName: \"Guns n' Roses\", timesHeard: 1}],\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/mostHeard/0/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"mostHeard",
								"0",
								"0"
							]
						},
						"description": "Obtiene los tres tracks mas escuchados de un artista por un usuario."
					},
					"response": []
				},
				{
					"name": "getMostHeard (Inexistent user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89ed114b-69ae-4481-9777-f67bdae14d6f",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"deberia obtener los tres tracks mas escuchados de un artista por un usuario inexistente.\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/1/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"1",
								"0"
							]
						},
						"description": "Intenta obtener los tres tracks mas escuchados de un artista por un usuario inexistente."
					},
					"response": []
				},
				{
					"name": "getMostHeard (Inexistent artist)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68e988c8-fb83-4bca-9992-82cb315ed968",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"deberia obtener los tres tracks mas escuchados de un artista inexistente por un usuario.\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/55",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"55"
							]
						},
						"description": "Intenta obtener los tres tracks mas escuchados de un artista inexistente por un usuario."
					},
					"response": []
				},
				{
					"name": "hear (Inexistent user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27dc9f1e-4163-40e7-a7fc-e0a0b51e8556",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"deberia intentar agregar la informacion necesaria de un track a un usuario inexistente\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/1/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"1",
								"0"
							]
						},
						"description": "Intenta agregar la informacion necesaria de un track a la lista de tracks escuchados de un usuario inexistente."
					},
					"response": []
				},
				{
					"name": "hear (Inexistent track)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aaae9e82-304f-4edd-8ec3-c272967c4305",
								"exec": [
									"const chai = require('chai');\r",
									"chai.config.truncateThreshold = 0;\r",
									"\r",
									"pm.test(\"deberia intentar agregar la informacion necesaria de un track inexistente a un usuario\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.response.to.have.jsonBody();\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.deep.equal({\r",
									"        status: 404,\r",
									"        errorCode: \"RESOURCE_NOT_FOUND\"\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:{{port}}/api/user/0/50",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"user",
								"0",
								"50"
							]
						},
						"description": "Intenta agregar la informacion necesaria de un track inexistente a la lista de tracks escuchados del usuario."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}